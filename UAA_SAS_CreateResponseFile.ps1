<#
    .SYNOPSIS
    This scripts create a response file for SAS.

    .DESCRIPTION
    UAA's SAS install requires a custom response file in order to install silently. This is an attempt to create that file automatically.


    .NOTES
    File Name	: UAA_SAS_CreateResponseFile.ps1
    Author		: John Yoakum - jyoakum@alaska.edu
    Requires	: PowerShell
#>
# Stores the full path to the parent directory of this powershell script
# e.g. C:\Scripts\GoogleApps
$ScriptPathParent = split-path -parent $MyInvocation.MyCommand.Definition




# The path on the local workstation where the Minitab license file needs to be created
$OutputFile="$ScriptPathParent\sdwresponse.properties"

# License File values
$LicenseHeader = "# Response file for the SAS Deployment Wizard"
$StartTask = "START_TASK=install"
$SASHOME = "SAS_HOME=C:\Program Files\SASHome"
$DeploymentType = "DEPLOYMENT_TYPE=nonplanned"
$PlannedInstall = "PLANNED_INSTALL=yes"
$PlannedConfigure = "PLANNED_CONFIGURE=yes"
$Selection1 = "PRODUCT_SELECTOIN1=dproclient"
$Selection2 = "PRODUCT_SELECTOIN1=eguide"
$Selection3 = "PRODUCT_SELECTOIN1=sasinstall"
$Selection4 = "PRODUCT_SELECTOIN1=itclient"
$Selection5 = "PRODUCT_SELECTOIN1=grsgdesigner"
$Selection6 = "PRODUCT_SELECTOIN1=sasoledb"
$Selection7 = "PRODUCT_SELECTOIN1=webedtr"
$Selection8 = "PRODUCT_SELECTOIN1=activexgraph"
$Selection9 = "PRODUCT_SELECTOIN1=statstudio"
$EGMode = "SAS_EG_MODE=64-bit"
$SASFoundation = "SASFOUNDATION_SELECTION=hadoopbasics,base,mapsgeo,mapsgfk,accelmvaastr,accelmvadb2,accelmvagplm,accelmvahadp,accelmvanetz,accelmvaorcl,accelmvahana,accelmvatera,hpets,hps,hpstat,inttech,scoreaccel,lasreng,spdsclient,accesssample,redshift,aster,db2,greenplum,hawq,hadoop,impala,mssqlserver,mysql,netezza,odbc,oledb,oracle,pcfile,postgres,sybase,saphana,sybaseiq,teradata,vertica,osisoft,af,assist,connect,eis,ets,fsp,graph,mapssas,iml,or,qc,share,stat"
$SASInstallationData = "SAS_INSTALLATION_DATA=$($ScriptPathParent)\sid_files\SAS94_9C1ZK3_70187931_Win_X64_Wrkstn.txt"
$Language = "LANGUAGE_SELECTION=en,u8"
$Region = "REGION_SETTING=en_US"
$Unicode = "UNICODE_SERVER=no"
$DefaultProduct = "DEFAULT_PRODUCT_FOR_SAS_FILE_TYPES=base"
$SendSupport = "SEND_SUPPORT_LOG_TO_SAS=no"

# Generic windows setting for adding carriage return, new line codes
$OFS="`r`n"

# Build up the license file syntax
# Yes for some reason the license file generated by Minitab has a blank line at the begin so we include it in ours.
$LicenseFile=$LicenseHeader + $OFS + $StartTask + $OFS + $SASHOME + $OFS + $DeploymentType + $OFS + $PlannedInstall + $OFS + $PlannedConfigure + $OFS + $Selection1 + $OFS + $Selection2 + $OFS + $Selection3 + $OFS + $Selection4 + $OFS + $Selection5 + `
    $OFS + $Selection6 + $OFS + $Selection7 + $OFS + $Selection8 + $OFS + $Selection9 + $OFS + $EGMode + $OFS + $SASFoundation + $OFS + $SASInstallationData + $OFS + $Language + $OFS + $Region + $OFS + $Unicode + $OFS + $DefaultProduct + $OFS + $SendSupport

# Uncomment out the following line for debugging purposes, it'll output the license file to the PowerShell console
#Write-Host $LicenseFile

Set-Content -Encoding Unicode -Path $OutputFile -Value $LicenseFile